fn main()
{
    print!("Day 1: ");
    day1();
    print!("Day 2: ");
    day2();
}

#[derive(Copy,Clone)]
enum D
{
    N,
    E,
    S,
    W,
}
impl D
{
    fn left(&mut self)
    {
        *self = match *self
        {
            D::N => D::W,
            D::W => D::S,
            D::S => D::E,
            D::E => D::N,
        }
    }
    fn right(&mut self)
    {
        *self = match *self
        {
            D::N => D::E,
            D::W => D::N,
            D::S => D::W,
            D::E => D::S,
        }
    }
}

struct Loc
{
    x: i64,
    y: i64,
    dir: D,
}

impl Loc
{
    fn movn(&mut self, instr: &str)
    {
        let len = if let Ok(n) = i64::from_str_radix(&instr[1..], 10)
        {
            n
        }
        else
        {
            return;
        };
        
        if instr.starts_with('R')
        {
            self.dir.right()
        }
        else if instr.starts_with('L')
        {
            self.dir.left()
        }
        
        match self.dir
        {
            D::N => self.y += len,
            D::S => self.y -= len,
            D::E => self.x += len,
            D::W => self.x -= len,
        }
    }

    fn mov1(&mut self, instr: char)
    {
        match instr
        {
            'U' if self.y>0=>self.y-=1,
            'L' if self.x>0=>self.x-=1,
            'D' if self.y<2=>self.y+=1,
            'R' if self.x<2=>self.x+=1,
            _=>{}
        }
    }
}



fn day1()
{
        static DIRECTIONS: &'static str =
        "L5 R1 L5 L1 R5 R1 R1 L4 L1 L3 R2 R4 L4 L1 L1 R2 R4 R3 L1 R4 L4 L5 L4 R4 L5 R1 R5 L2 R1 R3 L2 L4 L4 R1 L192 \
         R5 R1 R4 L5 L4 R5 L1 L1 R48 R5 R5 L2 R4 R4 R1 R3 L1 L4 L5 R1 L4 L2 L5 R5 L2 R74 R4 L1 R188 R5 L4 L2 R5 R2 L4 \
         R4 R3 R3 R2 R1 L3 L2 L5 L5 L2 L1 R1 R5 R4 L3 R5 L1 L3 R4 L1 L3 L2 R1 R3 R2 R5 L3 L1 L1 R5 L4 L5 R5 R2 L5 R2 \
         L1 L5 L3 L5 L5 L1 R1 L4 L3 L1 R2 R5 L1 L3 R4 R5 L4 L1 R5 L1 R5 R5 R5 R2 R1 R2 L5 L5 L5 R4 L5 L4 L4 R5 L2 R1 \
         R5 L1 L5 R4 L3 R4 L2 R3 R3 R3 L2 L2 L2 L1 L4 R3 L4 L2 R2 R5 L1 R2";

    let mut loc = Loc {
        x: 0,
        y: 0,
        dir: D::N,
    };

    for instr in DIRECTIONS.split(' ')
    {
        loc.movn(instr)
    }

    println!("{}", loc.x + loc.y);
}

fn day2()
{
    static DIRECTIONS: &'static str = "ULUULLUULUUUUDURUUULLDLDDRDRDULULRULLRLULRUDRRLDDLRULLLDRDRRDDLLLLDURUURDUDUUURDRLRLLURUDRDULURRUDLRDRRLLRDULLDURURLLLULLRLUDDLRRURRLDULRDDULDLRLURDUDRLLRUDDRLRDLLDDUURLRUDDURRLRURLDDDURRDLLDUUDLLLDUDURLUDURLRDLURURRLRLDDRURRLRRDURLURURRRULRRDLDDDDLLRDLDDDRDDRLUUDDLDUURUULDLUULUURRDRLDDDULRRRRULULLRLLDDUDRLRRLLLLLDRULURLLDULULLUULDDRURUDULDRDRRURLDRDDLULRDDRDLRLUDLLLDUDULUUUUDRDRURDDULLRDRLRRURLRDLRRRRUDDLRDDUDLDLUUDLDDRRRDRLLRLUURUDRUUULUDDDLDUULULLRUDULULLLDRLDDLLUUDRDDDDRUDURDRRUUDDLRRRRURLURLD
LDLUDDLLDDRLLDLDRDDDDDUURUDDDUURLRLRLDULLLDLUDDDULLDUDLRUUDDLUULLDRLDDUDLUDDLURRRLDUURDDRULLURLLRLLUUDRLDDDLDLDRDUDLRDURULDLDRRDRLDLUURRRRLUDDULDULUUUDULDDRLLDDRRUULURRUURRLDUUUDDDDRUURUDRRRDDDDLRLURRRRUUDDDULRRURRDLULRURDDRDRLUDLURDDRDURRUURDUDUDRRDDURRRDURDLUUUURRUDULLDDRLLLURLDUDRRLDDLULUDUDDDDUDLUUULUURUDRURUUDUUURRLDUUDRDRURLLDLLLLLRLLUDURDRRLULRRDDDRLDRDDURLRDULULLDDURURLRRDRULDULUUUURLDURUDUDUDDLUDRRDURULRDULLLDRRDLDLUDURDULULLDDURDDUDRUUUDUDRLDUURDUUUDUURURUDRULRURLDLRDDURDLUU
DDLDRLLDRRDRRLLUUURDDULRDUDRDRUDULURLLDDLRRRUDRDLDLURRRULUDRDLULLULLDUUDRLRUDDLRRURRUULRLDLLLDLRLLLURLLLURLLRDDLULLDUURLURDLLDLDUDLDRUUUDDLLDRRRRRUDRURUURRRDRUURDRDDRLDUUULUDUDRUDLLLLDRDRURRRDUUURLDLRLRDDDRLUDULDRLLULRDLDURDLDURUUDDULLULRDDRLRUURLLLURDRUURUUDUUULRDUDDRDURRRDUUDRRRUDRDLRURDLLDDDURLLRRDDDDLDULULDRLDRULDDLRRRLUDLLLLUDURRRUURUUULRRLDUURDLURRLRLLRDLRDDRDDLRDLULRUUUDDDUDRRURDDURURDDUDLURUUURUUUUDURDDLDRDULDRLDRLLRLRRRLDRLLDDRDLDLUDDLUDLULDLLDRDLLRDULDUDDULRRRUUDULDULRRURLRDRUDLDUDLURRRDDULRDDRULDLUUDDLRDUURDRDR
URDURRRRUURULDLRUUDURDLLDUULULDURUDULLUDULRUDUUURLDRRULRRLLRDUURDDDLRDDRULUUURRRRDLLDLRLRULDLRRRRUDULDDURDLDUUULDURLLUDLURULLURRRDRLLDRRDULUDDURLDULLDURLUDUULRRLLURURLDLLLURDUDRLDDDRDULLUDDRLDDRRRLDULLLLDUURULUDDDURUULUUUDURUDURDURULLLDRULULDRRLDRLDLRLRUDUDURRLURLRUUDRRDULULDLLDRDRRRDUDUURLDULLLURRDLUDDLDDRDDUDLDDRRRUDRULLURDDULRLDUDDDRULURLLUDLLRLRRDRDRRURUUUURDLUURRDULLRDLDLRDDRDRLLLRRDDLDDDDLUDLRLULRRDDRDLDLUUUDLDURURLULLLDDDULURLRRURLDDRDDLD
UDUULLRLUDLLUULRURRUUDDLLLDUURRURURDDRDLRRURLLRURLDDDRRDDUDRLLDRRUDRDRDDRURLULDDLDLRRUDDULLRLDDLRURLUURUURURDLDUDRLUUURRRLUURUDUDUUDDLDULUULRLDLLURLDRUDRLLRULURDLDDLLULLDRRUUDDLRRRUDDLRDRRRULDRDDRRULLLUDRUULURDUDRDLRRLDLRLRLDDULRRLULUUDDULDUDDULRRURLRDRDURUDDDLLRLDRDRULDDLLRLLRDUDDDDDDRLRLLDURUULDUUUDRURRLLRLDDDDRDRDUURRURDRDLLLUDDRDRRRDLUDLUUDRULURDLLLLLRDUDLLRULUULRLULRURULRLRRULUURLUDLDLLUURDLLULLLDDLRUDDRULRDLULRUURLDRULRRLULRLRULRDLURLLRURULRDRDLRRLRRDRUUURURULLLDDUURLDUDLLRRLRLRULLDUUUULDDUUU";

    let mut loc: Loc = Loc { x: 1, y: 1, dir: D::N };
    let mut code: [i64; 5] = [0; 5];
    let mut idx: usize = 0;

    for line in DIRECTIONS.lines()
    {
        for c in line.chars()
        {
            loc.mov1(c);
        }
        code[idx]=1+(3*loc.y)+loc.x;
        idx+=1;
    }
    for x in &code
    {
        print!("{} ", x);
    }
    println!();
}
